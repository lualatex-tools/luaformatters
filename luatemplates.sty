\NeedsTeXFormat{LaTeX2e}%
\ProvidesPackage{luatemplates}[2019/06/28 v0.5]

\RequirePackage{lyluatextools}

% Options
\directlua{
  local _opts = lyluatex_options
  template_opts = _opts.Opts:new('template_opts', {
    ['color'] = {'false', 'true', ''},
      ['default-color'] = {'blue'},
    ['element-separator'] = {	'{,}' },
    ['number-case'] = {
      'normal', 'allsmallcaps', 'smallcaps', 'upper', 'lower'
      },
    ['range-follow'] = {'f.'},
    ['range-ffollow'] = {'ff.'},
    ['range-sep'] = {'--'},
    ['list-sep'] = { '{, }'},
    ['list-last-sep'] = {' and '},
    ['self-documentation'] = {'false', 'true', ''},
  })
}
\directlua{
  lua_templates = require(
    kpse.find_file("luatemplates.lua") or "luatemplates.lua"
  )
}

% Create an instance of lua_templates
% - #1: variable name prefix
%       The variable #1_templates will become a global Lua variable
%       referencing the Templates object.
% - #2: Lua module filename
%       Name of a file (which has to be available to 'require')
%       This file must return a configuration table.
\newcommand*{\setupLuaTemplates}[2]{%
  \directlua{
    lua_templates:setup(
      [[\string#1]]..'_templates',
      require([[\string#2]]))
  }
}

% TODO:
% Reimplement that as a luatemplates definition, once
% https://github.com/uliska/luatemplates/issues/12
% is implemented.
\newcommand*{\luatemplatesSetOption}[2]{
\directlua{template_opts.set_option(template_opts,
  '\luatexluaescapestring{#1}',
  '\luatexluaescapestring{#2}')}
}
