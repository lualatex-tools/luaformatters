\NeedsTeXFormat{LaTeX2e}%
\ProvidesPackage{luatemplates}[2019/07/10 v0.8]

\RequirePackage{lyluatextools}

% Options
\directlua{
  local _opts = lyluatex_options
  template_opts = _opts.Opts:new('template_opts', {
    ['color'] = {'false', 'true', ''},
      ['default-color'] = {'blue'},
    ['element-separator'] = {	'{,}' },
    ['number-case'] = {
      'normal', 'allsmallcaps', 'smallcaps', 'upper', 'lower'
      },
    ['range-follow'] = {'f.'},
      ['range-ffollow'] = {'ff.'},
      ['range-sep'] = {'--'},
      ['range-input-sep'] = {'-'},
    ['list-sep'] = { '{, }'},
    ['list-last-sep'] = {' and '},
    ['self-documentation'] = {'false', 'true', ''},
      ['demosep-inline'] = { ': '},
      ['demosep-minted'] = { [[

]] },
      ['doc-comment'] = {'true', 'false', ''},
  })
}

% Instantiate the main Templates table.
% Is now available as a global variable `lua_templates`
\directlua{require(kpse.find_file("luatemplates.lua") or "luatemplates.lua")}

% Add a “client” to lua_templates
% - #1: client name
%       has to be unique among all clients registered with luatemplates
%       (within one document, including all loaded packages)
% - #2: Lua module filename
%       Name of a file (which has to be available to 'require')
%       This file must return a templatestable.
\newcommand*{\addLuaTemplates}[1]{%
  \directlua{
    lua_templates:add(require(kpse.find_file([[\string#1]]) or [[\string#1]]))
  }
}

% Macro to change a package option during the document.
% Boolean values have to be specified explicitly (different from setting
% *package* options on loading).
% Note that not all options can *reasonably* be changed after loading.
\newcommand*{\luatemplatesSetOption}[2]{
\directlua{template_opts.set_option(template_opts,
  '\luatexluaescapestring{#1}',
  '\luatexluaescapestring{#2}')}
}
